name: "Build iOS app"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Which environment to deploy'
        required: true
        default: 'dev'
        type: string
        options:
          - dev
          - qa
          - uat
          - prod

jobs:
  build_with_signing:
    runs-on: macos-latest
    steps:
      - name: check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: checkout repository
        uses: actions/checkout@v3

      - name: Install Yarn
        run: yarn install

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Get info on configuration
        run: | 
          echo "Processor Details"
          sysctl -n machdep.cpu.brand_string
          echo "Node version"
          node --version
          echo "Xcode version"
          xcodebuild -version
          echo "mac flavor"
          system_profiler SPSoftwareDataType
          echo "printing existing scheme:" ${IOS_SCHEME}

      - name: List available schemes
        run: |
          cd ios
          xcodebuild -list -workspace tree.xcworkspace

      - name: Install Pods
        run: |
          cd ios
          pod setup
          pod install

      - name: Set environment-specific secrets
        id: vars
        run: |
          case "${{ github.event.inputs.environment }}" in
            "dev")
              echo "::set-output name=BUILD_CERTIFICATE_BASE64::${{ secrets.DEV_BUILD_CERTIFICATE_BASE64 }}"
              echo "::set-output name=P12_PASSWORD::${{ secrets.DEV_P12_PASSWORD }}"
              echo "::set-output name=BUILD_PROVISION_PROFILE_BASE64::${{ secrets.DEV_BUILD_PROVISION_PROFILE_BASE64 }}"
              echo "::set-output name=KEYCHAIN_PASSWORD::${{ secrets.DEV_KEYCHAIN_PASSWORD }}"
              echo "::set-output name=EXPORT_OPTIONS_PLIST_BASE64::${{ secrets.DEV_EXPORT_OPTIONS_PLIST_BASE64 }}"
              ;;
            "qa")
              echo "::set-output name=BUILD_CERTIFICATE_BASE64::${{ secrets.QA_BUILD_CERTIFICATE_BASE64 }}"
              echo "::set-output name=P12_PASSWORD::${{ secrets.QA_P12_PASSWORD }}"
              echo "::set-output name=BUILD_PROVISION_PROFILE_BASE64::${{ secrets.QA_BUILD_PROVISION_PROFILE_BASE64 }}"
              echo "::set-output name=KEYCHAIN_PASSWORD::${{ secrets.QA_KEYCHAIN_PASSWORD }}"
              echo "::set-output name=EXPORT_OPTIONS_PLIST_BASE64::${{ secrets.QA_EXPORT_OPTIONS_PLIST_BASE64 }}"
              ;;
            "uat")
              echo "::set-output name=BUILD_CERTIFICATE_BASE64::${{ secrets.UAT_BUILD_CERTIFICATE_BASE64 }}"
              echo "::set-output name=P12_PASSWORD::${{ secrets.UAT_P12_PASSWORD }}"
              echo "::set-output name=BUILD_PROVISION_PROFILE_BASE64::${{ secrets.UAT_BUILD_PROVISION_PROFILE_BASE64 }}"
              echo "::set-output name=KEYCHAIN_PASSWORD::${{ secrets.UAT_KEYCHAIN_PASSWORD }}"
              echo "::set-output name=EXPORT_OPTIONS_PLIST_BASE64::${{ secrets.UAT_EXPORT_OPTIONS_PLIST_BASE64 }}"
              ;;
            "prod")
              echo "::set-output name=BUILD_CERTIFICATE_BASE64::${{ secrets.PROD_BUILD_CERTIFICATE_BASE64 }}"
              echo "::set-output name=P12_PASSWORD::${{ secrets.PROD_P12_PASSWORD }}"
              echo "::set-output name=BUILD_PROVISION_PROFILE_BASE64::${{ secrets.PROD_BUILD_PROVISION_PROFILE_BASE64 }}"
              echo "::set-output name=KEYCHAIN_PASSWORD::${{ secrets.PROD_KEYCHAIN_PASSWORD }}"
              echo "::set-output name=EXPORT_OPTIONS_PLIST_BASE64::${{ secrets.PROD_EXPORT_OPTIONS_PLIST_BASE64 }}"
              ;;
          esac

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ steps.vars.outputs.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ steps.vars.outputs.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ steps.vars.outputs.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ steps.vars.outputs.KEYCHAIN_PASSWORD }}
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          security list-keychains -s $KEYCHAIN_PATH
          security default-keychain -s $KEYCHAIN_PATH
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          echo "Installed provisioning profiles:"
          ls ~/Library/MobileDevice/Provisioning\ Profiles
          echo "Keychains list:"
          security list-keychains
          echo "Keychain contents:"
          security find-identity -v -p codesigning

      - name: Print details of Provisioning profile
        run: security cms -D -i $RUNNER_TEMP/build_pp.mobileprovision

      - name: Build and Archive App
        env:
          PATH: /Applications/Xcode.app/Contents/Developer/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin
        run: |
          cd ios
          xcodebuild -workspace "tree.xcworkspace" PRODUCT_BUNDLE_IDENTIFIER="com.ntr.us.${{ github.event.inputs.environment }}.tree" \
            -scheme "tree QA Unmanaged" \
            -configuration Release \
            -sdk iphoneos \
            archive \
            -archivePath $RUNNER_TEMP/tree.xcarchive \
            CODE_SIGN_STYLE=Manual \
            "CODE_SIGN_IDENTITY\[sdk=iphoneos*\]"="Apple Development" \
            "PROVISIONING_PROFILE_SPECIFIER\[sdk=iphoneos*\]"="Naga tree QA Dev Profile 20240724"

      - name: Create exportOptions.plist from secret
        env:
          EXPORT_OPTIONS_PLIST_BASE64: ${{ steps.vars.outputs.EXPORT_OPTIONS_PLIST_BASE64 }}
        run: echo "$EXPORT_OPTIONS_PLIST_BASE64" | base64 --decode > $RUNNER_TEMP/exportOptions.plist

      - name: Navigate to Archive Directory and List contents
        run: |
          cd $RUNNER_TEMP
          echo "---Inside Runner temp-----"
          ls -la
          cd tree.xcarchive
          echo "---Inside Xarchive---"
          ls -la

      - name: Export IPA
        run: |
          cd ios
          xcodebuild -exportArchive \
            -archivePath $RUNNER_TEMP/tree.xcarchive \
            -exportOptionsPlist $RUNNER_TEMP/exportOptions.plist \
            -exportPath $RUNNER_TEMP/build

      - name: Verify IPA Creation
        run: ls -la $RUNNER_TEMP/build

      - name: Check if IPA Exists
        run: |
          if [ -f "$RUNNER_TEMP/build/tree QA Unmanaged.ipa" ]; then 
            echo "IPA file exists"
          else 
            echo "IPA file does not exist"
            exit 1
          fi

      - name: Upload application
        uses: actions/upload-artifact@v2
        with:
          name: treeUnmanagedApp
          path: ${{ runner.temp }}/build/tree\ QA\ Unmanaged.ipa
          retention-days: 10
